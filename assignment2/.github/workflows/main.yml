name: Deploy to ECR 

on: 
  push:
    branches: [ main ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set timezone to Toronto
      run: |
        sudo ln -fs /usr/share/zoneinfo/America/Toronto /etc/localtime
        echo "Current datetime: $(date)"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecr_assignment1_repo
        
        APP_COLOR_CONTAINER1: "blue"
        APP_COLOR_CONTAINER2: "pink"
        APP_COLOR_CONTAINER3: "lime"
      run: |
        cd app/
        ls -ltra

        IMAGE_TAG=mysql-db-$(date +"%H%M%S")
        echo "IMAGE_TAG: $IMAGE_TAG"
        
        #docker build mysql
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:"${IMAGE_TAG}" -f Dockerfile_mysql .
        echo "Mysql build complete"

        # run mysql container
        docker run -d --name mysql_db -e MYSQL_ROOT_PASSWORD=pw $ECR_REGISTRY/$ECR_REPOSITORY:"${IMAGE_TAG}"
        docker ps
        echo "Sleep for 10s then... Showing list of databases in MYSQL:"
        sleep 10
        docker exec mysql_db mysql -ppw -e "show databases;"

        #push docker image to registory
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:"${IMAGE_TAG}"
        echo "Mysql push to ecr complete"
        
        echo "Mysql container complete"


        # Docker BUILD WEBAPP ====
        #export variables
        export DBHOST=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql_db`
        export DBPORT=3306
        export DBUSER=root
        export DATABASE=employees
        export DBPWD=pw
        export APP_COLOR=blue
        
        IMAGE_TAG=webapp-$(date +"%H%M%S")
        echo "IMAGE_TAG: $IMAGE_TAG"

        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:"${IMAGE_TAG}" -f Dockerfile .
        echo "App build complete"
        
        # Unit test
        docker run -d -p 8080:8080  -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e  DBUSER=$DBUSER -e APP_COLOR=$APP_COLOR -e DBPWD=$DBPWD -e DATABASE=$DATABASE $ECR_REGISTRY/$ECR_REPOSITORY:"${IMAGE_TAG}"
        echo "App 8080 container run complete"

        docker ps
        
        echo "Public IP below:"
        curl ifconfig.me
        wget -qO- ifconfig.me

        echo "Before docker ps"
        docker ps

        #Docker container app push to ecr
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:"${IMAGE_TAG}"
        echo "push done"
        
        echo "All done now"
       
